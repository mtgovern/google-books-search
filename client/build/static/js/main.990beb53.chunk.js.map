{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","pages/Saved.js","components/BookSearchForm/index.js","components/Loader/index.js","components/BooksList/index.js","pages/Search.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","API","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","Saved","_useState","useState","_useState2","Object","slicedToArray","books","setBooks","_useState3","_useState4","loadBooks","then","res","data","catch","err","console","log","useEffect","components_Jumbotron","length","book","key","_id","title","onClick","href","link","styletarget","rel","author","alt","src","image","description","BookSearchForm","onSubmitHandler","searchTerm","onInputChange","error","onSubmit","type","placeholder","value","onChange","required","color","Loader","loading","Fragment","Book","volumeInfo","authors","imageLinks","thumbnail","infoLink","results","handleSave","target","publishedDate","lastAuthor","slice","pop","bookAuthors","BooksList","items","index","BooksList_Book","Search","setError","_useState5","_useState6","setLoading","_useState7","_useState8","setSearchTerm","fetchBooks","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","t0","stop","apply","this","arguments","components_BookSearchForm","e","preventDefault","components_Loader","totalItems","components_BooksList","page","Nav","App","react_router_dom","components_Nav","react_router","exact","path","pages_Search","pages_Saved","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.990beb53.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Saved() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res =>\n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value })\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      })\n        .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-0\">These are the books I hope to read in the future</Col>\n\n      </Row>\n      <Jumbotron>\n        <h1>What Books Should I Read?</h1>\n      </Jumbotron>\n\n      {books.length ? (\n        books.map(book => (\n          <div className=\"outer\" key={book._id}>\n            <Row>\n              <Col size=\"md-6\">\n                {book.title}\n              </Col>\n              <Col size=\"md-6\">\n                <button onClick={() => deleteBook(book._id)} className=\"delete\">Delete</button>\n                <button><a href={book.link} styletarget=\"_blank\" rel=\"noopener noreferrer\" className=\"view\">View</a></button>\n              </Col>\n            </Row>\n            <Row>\n              <Col size=\"md-6\">{book.author}</Col>\n            </Row>\n            <Row>\n              <Col size=\"md-3\">\n                <img alt={`${book.title} book`}\n                  src={book.image} />\n              </Col>\n              <Col size=\"md-9\">\n                <span className=\"text\">{book.description}</span>\n              </Col>\n            </Row>\n          </div>\n        ))) : (<h4>No Results to Display</h4>)}\n\n    </Container>\n  );\n}\n\n\nexport default Saved;","import React from 'react';\n\nconst BookSearchForm = ({\n  onSubmitHandler,\n  searchTerm,\n  onInputChange,\n  error,\n}) => {\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <label>\n        <span>Search for books</span>\n        <input\n          type=\"search\"\n          placeholder=\"\"\n          value={searchTerm}\n          onChange={onInputChange}\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </label>\n      {error && (\n        <div style={{ color: `red` }}>\n          some error occurred, while fetching api\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default BookSearchForm;","// Loader.js\nimport React from 'react';\n\nconst Loader = ({ loading, searchTerm }) => {\n  return (\n    <>\n      {loading && (\n        <div style={{ color: `green` }}>\n          fetching books for \"<strong>{searchTerm}</strong>\"\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Loader;","import React from 'react';\nimport \"./style.css\";\nimport API from \"../../utils/API\";\n\n// Separate the UI specific transforming logic to utils folder\n//import { bookAuthors } from '../utils';\nconst bookAuthors = (authors) => {\n    if (authors) {\n        if (authors.length <= 2) {\n            authors = authors.join(\" and \");\n        } else if (authors.length > 2) {\n            let lastAuthor = \" and \" + authors.slice(-1);\n            authors.pop();\n            authors = authors.join(\", \");\n            authors += lastAuthor;\n        }\n    } else {\n        authors = \"Author not provided\";\n    }\n    return authors;\n}\n\nfunction handleSave(book) {\n    // event.preventDefault();\n    // if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: book.volumeInfo.title,\n        authors: book.volumeInfo.authors,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks\n        ? book.volumeInfo.imageLinks.thumbnail\n        : \"https://thumbs.dreamstime.com/b/no-image-available-icon-flat-vector-no-image-available-icon-flat-vector-illustration-132482930.jpg\",\n        link: book.volumeInfo.infoLink,\n      })\n        .then((results) => {\n            console.log(results);\n        })\n        .catch(err => console.log(err));\n    }\n\nconst Book = ({ book }) => {\n\n    return (\n        <div>\n            <div className=\"row\" key={book.id}>\n                <div className=\"col\">{book.volumeInfo.title}\n                    <button onClick={() => handleSave(book)} className=\"save\">\n                        Save\n                    </button>\n                    {/* <button>\n                        <a className=\"btn save\" href={book.volumeInfo.infoLink} target=\"_blank\">Save</a>\n                    </button> */}\n                    <button>\n                        <a className=\"view\" href={book.volumeInfo.infoLink} target=\"_blank\">View</a>\n                    </button>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">{book.volumeInfo.publishedDate}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">{bookAuthors(book.volumeInfo.authors)}</div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col img-fluid\">\n                    <img alt={`${book.volumeInfo.title} book`}\n                        src={`http://books.google.com/books/content?id=${book.id}&printsec=frontcover&img=&img=1&zoom=&ksource=gbs_api`} />\n                    <span className=\"text\">{book.volumeInfo.description}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n    const BooksList = ({ books }) => {\n        return (\n            <ul>\n                {books.items.map((book, index) => {\n                    return <Book book={book} key={index} />;\n                })}\n            </ul>\n        );\n    };\n    export default BooksList;","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport BookSearchForm from \"../components/BookSearchForm\";\nimport Loader from \"../components/Loader\";\nimport BooksList from \"../components/BooksList\";\n\nfunction Search() {\n    let API_URL = `https://www.googleapis.com/books/v1/volumes`;\n    // let authors = ['Param', 'Vennila', 'Afrin'];\n    // bookAuthors(authors);\n    // // Param, Vennila and Afrin\n    // let authors = ['Param', 'Afrin'];\n    // bookAuthors(authors);\n    // // Param and Afrin\n\n    const [books, setBooks] = useState({ items: [] });\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const onInputChange = (e) => {\n        setSearchTerm(e.target.value);\n    }\n    const fetchBooks = async () => {\n        // set loading Before API operation starts\n        setLoading(true);\n        setError(false);\n        try {\n            const result = await axios.get(`${API_URL}?q=${searchTerm}`);\n            setBooks(result.data);\n        }\n        catch (error) {\n            setError(true);\n        }\n        // After API operation end\n        setLoading(false);\n    }\n    // const bookAuthors = authors => {\n    //     if (authors){\n    //     if (authors.length <= 2) {\n    //         authors = authors.join(' and ');\n    //     } else if (authors.length > 2) {\n    //         let lastAuthor = ' and ' + authors.slice(-1);\n    //         authors.pop();\n    //         authors = authors.join(', ');\n    //         authors += lastAuthor;\n    //     }\n    //     return authors;\n    // }   else {\n    //     authors = \"Author not provided\";\n    // }\n    //     return authors;\n    // };\n\n    const onSubmitHandler = (e) => {\n        // Prevent browser refreshing after form submission\n        e.preventDefault();\n        // Call fetch books async function\n        fetchBooks();\n    }\n\n    return (\n        <div>\n            <BookSearchForm\n                onSubmitHandler={onSubmitHandler}\n                onInputChange={onInputChange}\n                searchTerm={searchTerm}\n                error={error}\n            />\n            <Loader searchTerm={searchTerm} loading={loading} />\n            {books.totalItems !==0 ? (\n                <BooksList books={books} page=\"search\" />\n            ) : (\n                    <h3>No Results to Display</h3>)}\n        </div>\n    );\n}\n\nexport default Search;\n\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <a className=\"navbar-brand\" href=\"/search\">\n        Search\n      </a>\n      <a className=\"navbar-brand\" href=\"/saved\">\n        Saved\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport Nav from \"./components/Nav\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path={[\"/\", \"/search\"]}>\n            <Search />\n          </Route>\n          <Route exact path=\"/saved\">\n            <Saved />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}